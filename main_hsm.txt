#include <avr/pgmspace.h>
#include "ch.h"
#include "hal.h"
#include "chprintf.h"
#include "event.h"
#include "sm.h"
#include "transitions.h"
#include <string.h>

enum {
	ev1 = USER_EVENT,
	ev2,
	ev3,
	ev11,
	ev22,
	ev33,
	ev44,
	ev0,
	ev21,
	EV
};

cb_status init_cb(event_t ev);

cb_status fn_S1_cb(event_t ev);
cb_status fn_S11_cb(event_t ev);
cb_status fn_S111_cb(event_t ev);
cb_status fn_S12_cb(event_t ev);
cb_status fn_S121_cb(event_t ev);
cb_status fn_S122_cb(event_t ev);
cb_status fn_S2_cb(event_t ev);
cb_status fn_S21_cb(event_t ev);
cb_status fn_S22_cb(event_t ev);


cb_status init_cb(event_t ev)
{
        Top_init_tran();
        return EVENT_HANDLED;
}


cb_status fn_S1_cb(event_t ev)
{
        switch(ev) {
        case ENTRY_EVENT:
                return EVENT_HANDLED;
        case EXIT_EVENT:
                return EVENT_HANDLED;
	case EVENT_ev1:
	case EVENT_ev2:
	case EVENT_ev3:
		fn_S1_S2_tran();
		return EVENT_HANDLED;
	}
	return EVENT_NOT_HANDLED;
}

cb_status fn_S11_cb(event_t ev)
{
        switch(ev) {
        case ENTRY_EVENT:
                return EVENT_HANDLED;
        case EXIT_EVENT:
                return EVENT_HANDLED;
	}
	return EVENT_NOT_HANDLED;
}

cb_status fn_S111_cb(event_t ev)
{
        switch(ev) {
        case ENTRY_EVENT:
                return EVENT_HANDLED;
        case EXIT_EVENT:
                return EVENT_HANDLED;
	}
	return EVENT_NOT_HANDLED;
}

cb_status fn_S12_cb(event_t ev)
{
        switch(ev) {
        case ENTRY_EVENT:
                return EVENT_HANDLED;
        case EXIT_EVENT:
                return EVENT_HANDLED;
	}
	return EVENT_NOT_HANDLED;
}

cb_status fn_S121_cb(event_t ev)
{
        switch(ev) {
        case ENTRY_EVENT:
                return EVENT_HANDLED;
        case EXIT_EVENT:
                return EVENT_HANDLED;
	}
	return EVENT_NOT_HANDLED;
}

cb_status fn_S122_cb(event_t ev)
{
        switch(ev) {
        case ENTRY_EVENT:
                return EVENT_HANDLED;
        case EXIT_EVENT:
                return EVENT_HANDLED;
	}
	return EVENT_NOT_HANDLED;
}

cb_status fn_S2_cb(event_t ev)
{
        switch(ev) {
        case ENTRY_EVENT:
                return EVENT_HANDLED;
        case EXIT_EVENT:
                return EVENT_HANDLED;
	case EVENT_ev11:
	case EVENT_ev22:
	case EVENT_ev33:
	case EVENT_ev44:
		fn_S2_S2_tran();
		return EVENT_HANDLED;
	}
	return EVENT_NOT_HANDLED;
}

cb_status fn_S21_cb(event_t ev)
{
        switch(ev) {
        case ENTRY_EVENT:
                return EVENT_HANDLED;
        case EXIT_EVENT:
                return EVENT_HANDLED;
	case EVENT_ev21:
		fn_S21_S22_tran();
		return EVENT_HANDLED;
	}
	return EVENT_NOT_HANDLED;
}

cb_status fn_S22_cb(event_t ev)
{
        switch(ev) {
        case ENTRY_EVENT:
                return EVENT_HANDLED;
        case EXIT_EVENT:
                return EVENT_HANDLED;
	}
	return EVENT_NOT_HANDLED;
}